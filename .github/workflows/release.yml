name: App build & release drafter

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'

permissions:
  contents: read

jobs:
  release_draft:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Release drafter
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter-config.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Sleep 5 seconds # sleep para resolver o problema em que o release-draft executa as etapas abaixo antes de criar o lançamento
        run: sleep 5

      - name: Get latest release
        id: get_latest_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update package.json version
        run: |
          version=${{ steps.get_latest_release.outputs.release }}
          version=${version#v}
          echo "Latest release: $version"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@github.com"
          yarn version --new-version $version --no-git-tag-version
          if [ ! -z "$(git diff --exit-code)" ]; then  # Add brackets and check for non-empty diff
            git add package.json
            git commit -m "Update package.json version"
            git checkout develop
            git merge main
            git push --all
          fi

  build_release:
    runs-on: windows-latest
    needs: release_draft
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main # Se a referência não estiver definida como principal, a referência que acionou o fluxo de trabalho será usada (definida como principal para refletir o commit na etapa `Atualizar versão package.json`)

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.1.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Generate environment variables file
        run: |
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
          echo "MAIN_VITE_SENTRY_DSN=${{ vars.MAIN_VITE_SENTRY_DSN }}" >> .env
          echo "RENDERER_VITE_SENTRY_DSN=${{ vars.RENDERER_VITE_SENTRY_DSN }}" >> .env

      - name: Install dependencies
        run: pnpm i

      - name: Build
        run: pnpm deploy
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }} # electron-builder não suporta tokens de autenticação automática
